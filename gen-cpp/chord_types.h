/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef chord_TYPES_H
#define chord_TYPES_H

#include <iosfwd>

#include <thrift/Thrift.h>
#include <thrift/TApplicationException.h>
#include <thrift/TBase.h>
#include <thrift/protocol/TProtocol.h>
#include <thrift/transport/TTransport.h>

#include <functional>
#include <memory>




class RFileMetadata;

class RFile;

typedef struct _RFileMetadata__isset {
  _RFileMetadata__isset() : filename(false), version(false) {}
  bool filename :1;
  bool version :1;
} _RFileMetadata__isset;

class RFileMetadata : public virtual ::apache::thrift::TBase {
 public:

  RFileMetadata(const RFileMetadata&);
  RFileMetadata& operator=(const RFileMetadata&);
  RFileMetadata() : filename(), version(0) {
  }

  virtual ~RFileMetadata() noexcept;
  std::string filename;
  int32_t version;

  _RFileMetadata__isset __isset;

  void __set_filename(const std::string& val);

  void __set_version(const int32_t val);

  bool operator == (const RFileMetadata & rhs) const
  {
    if (__isset.filename != rhs.__isset.filename)
      return false;
    else if (__isset.filename && !(filename == rhs.filename))
      return false;
    if (__isset.version != rhs.__isset.version)
      return false;
    else if (__isset.version && !(version == rhs.version))
      return false;
    return true;
  }
  bool operator != (const RFileMetadata &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const RFileMetadata & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  virtual void printTo(std::ostream& out) const;
};

void swap(RFileMetadata &a, RFileMetadata &b);

std::ostream& operator<<(std::ostream& out, const RFileMetadata& obj);

typedef struct _RFile__isset {
  _RFile__isset() : meta(false), content(false) {}
  bool meta :1;
  bool content :1;
} _RFile__isset;

class RFile : public virtual ::apache::thrift::TBase {
 public:

  RFile(const RFile&);
  RFile& operator=(const RFile&);
  RFile() : content() {
  }

  virtual ~RFile() noexcept;
  RFileMetadata meta;
  std::string content;

  _RFile__isset __isset;

  void __set_meta(const RFileMetadata& val);

  void __set_content(const std::string& val);

  bool operator == (const RFile & rhs) const
  {
    if (__isset.meta != rhs.__isset.meta)
      return false;
    else if (__isset.meta && !(meta == rhs.meta))
      return false;
    if (__isset.content != rhs.__isset.content)
      return false;
    else if (__isset.content && !(content == rhs.content))
      return false;
    return true;
  }
  bool operator != (const RFile &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const RFile & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  virtual void printTo(std::ostream& out) const;
};

void swap(RFile &a, RFile &b);

std::ostream& operator<<(std::ostream& out, const RFile& obj);



#endif
